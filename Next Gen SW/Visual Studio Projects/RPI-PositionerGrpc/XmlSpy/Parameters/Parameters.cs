////////////////////////////////////////////////////////////////////////
//
// Parameters.cs
//
// This file was generated by XMLSpy 2023r2 Enterprise Edition.
//
// YOU SHOULD NOT MODIFY THIS FILE, BECAUSE IT WILL BE
// OVERWRITTEN WHEN YOU RE-RUN CODE GENERATION.
//
// Refer to the XMLSpy Documentation for further details.
// http://www.altova.com/xmlspy
//
////////////////////////////////////////////////////////////////////////
		
namespace Parameters
{
	abstract class EnumeratorBase : System.Collections.IEnumerator
	{
		System.Collections.IEnumerator inner;

		protected object InnerCurrent { get { return inner.Current; } }

		public EnumeratorBase(System.Collections.IEnumerator inner)
		{
			this.inner = inner;
		}

		public abstract object Current { get; }// { return new NumberType((System.Xml.XmlNode)inner.Current); } }
		public bool MoveNext() { return inner.MoveNext(); }
		public void Reset() { inner.Reset(); }
	}



namespace ps
{	
	public class AttributeProviderAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_AttributeProviderAttribute]); }}


		public AttributeProviderAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_AttributeProviderAttribute_altova_Type_AssemblyQualifiedName]);
			Property = new MemberAttribute_Property (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_AttributeProviderAttribute_altova_Property]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new AttributeProviderAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Property Property;
		public class MemberAttribute_Property
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Property (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("AttributeProviderAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class AttributeProviderAttribute

	public class ChoiceListAttribute : ps.ValueType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ChoiceListAttribute]); }}


		public ChoiceListAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ChoiceListAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ChoiceListAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ChoiceListAttribute

	public class CommandFormatStringAttribute : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_CommandFormatStringAttribute]); }}


		public CommandFormatStringAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new CommandFormatStringAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("CommandFormatStringAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class CommandFormatStringAttribute

	public class ComplexValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ComplexValueType]); }}


		public ComplexValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			RealValue = new MemberElement_RealValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ComplexValueType_altova_RealValue]);
			ImagValue = new MemberElement_ImagValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ComplexValueType_altova_ImagValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ComplexValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_RealValue RealValue;
		public class MemberElement_RealValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RealValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.doubleType this [int i] { get { return At(i);} } 
			public xs.doubleType At(int index) {return new xs.doubleType(owner.GetElementAt(info, index));}
			public xs.doubleType First { get  {return new xs.doubleType(owner.GetElementFirst(info));} }
			public xs.doubleType Last { get {return new xs.doubleType(owner.GetElementLast(info));} }
			public xs.doubleType Append(){return new xs.doubleType(owner.CreateElement(info));}
			public xs.doubleType AppendWithPrefix(string prefix) {return new xs.doubleType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.doubleType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ImagValue ImagValue;
		public class MemberElement_ImagValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ImagValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.doubleType this [int i] { get { return At(i);} } 
			public xs.doubleType At(int index) {return new xs.doubleType(owner.GetElementAt(info, index));}
			public xs.doubleType First { get  {return new xs.doubleType(owner.GetElementFirst(info));} }
			public xs.doubleType Last { get {return new xs.doubleType(owner.GetElementLast(info));} }
			public xs.doubleType Append(){return new xs.doubleType(owner.CreateElement(info));}
			public xs.doubleType AppendWithPrefix(string prefix) {return new xs.doubleType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.doubleType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ComplexValueType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ComplexValueType

	public class DefaultValueAttribute : ps.ValueType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DefaultValueAttribute]); }}


		public DefaultValueAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DefaultValueAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DefaultValueAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DefaultValueAttribute

	public class DescriptionAttribute : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DescriptionAttribute]); }}


		public DescriptionAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DescriptionAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DescriptionAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DescriptionAttribute

	public class DetailLevel : xs.integerType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DetailLevel]); }}


		public DetailLevel(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DetailLevel((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DetailLevel", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DetailLevel

	public class DisplayNameAttribute : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DisplayNameAttribute]); }}


		public DisplayNameAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class DisplayNameAttribute

	public class DisplayNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DisplayNameType]); }}


		public DisplayNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class DisplayNameType

	public class DisplayUnitsAttribute : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DisplayUnitsAttribute]); }}


		public DisplayUnitsAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Format = new MemberAttribute_Format (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DisplayUnitsAttribute_altova_Format]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DisplayUnitsAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Format Format;
		public class MemberAttribute_Format
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Format (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DisplayUnitsAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DisplayUnitsAttribute

	public class EditorAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_EditorAttribute]); }}


		public EditorAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_EditorAttribute_altova_Type_AssemblyQualifiedName]);
			BaseType = new MemberAttribute_BaseType (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_EditorAttribute_altova_BaseType]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new EditorAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_BaseType BaseType;
		public class MemberAttribute_BaseType
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_BaseType (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("EditorAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class EditorAttribute

	public class NameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_NameType]); }}


		public NameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NameType

	public class ParameterType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ParameterType]); }}


		public ParameterType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Parameter = new MemberElement_Parameter (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParameterType_altova_Parameter]);
			Property = new MemberElement_Property (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParameterType_altova_Property]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ParameterType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Parameter Parameter;
		public class MemberElement_Parameter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Parameter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ParameterType this [int i] { get { return At(i);} } 
			public ps.ParameterType At(int index) {return new ps.ParameterType(owner.GetElementAt(info, index));}
			public ps.ParameterType First { get  {return new ps.ParameterType(owner.GetElementFirst(info));} }
			public ps.ParameterType Last { get {return new ps.ParameterType(owner.GetElementLast(info));} }
			public ps.ParameterType Append(){return new ps.ParameterType(owner.CreateElement(info));}
			public ps.ParameterType AppendWithPrefix(string prefix) {return new ps.ParameterType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ParameterType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Property Property;
		public class MemberElement_Property : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Property (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.PropertyType this [int i] { get { return At(i);} } 
			public ps.PropertyType At(int index) {return new ps.PropertyType(owner.GetElementAt(info, index));}
			public ps.PropertyType First { get  {return new ps.PropertyType(owner.GetElementFirst(info));} }
			public ps.PropertyType Last { get {return new ps.PropertyType(owner.GetElementLast(info));} }
			public ps.PropertyType Append(){return new ps.PropertyType(owner.CreateElement(info));}
			public ps.PropertyType AppendWithPrefix(string prefix) {return new ps.PropertyType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.PropertyType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ParameterType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ParameterType

	public class ParametersType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ParametersType]); }}


		public ParametersType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			base2 = new MemberAttribute_base2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_base2]);
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_Name]);
			UserRole = new MemberAttribute_UserRole (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_UserRole]);

			Parameters3 = new MemberElement_Parameters3 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_Parameters3]);
			Parameter = new MemberElement_Parameter (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_Parameter]);
			DisplayName = new MemberElement_DisplayName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_DisplayName]);
			Description = new MemberElement_Description (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ParametersType_altova_Description]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ParametersType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_base2 base2;
		public class MemberAttribute_base2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_base2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_UserRole UserRole;
		public class MemberAttribute_UserRole
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_UserRole (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public MemberElement_Parameters3 Parameters3;
		public class MemberElement_Parameters3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Parameters3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ParametersType this [int i] { get { return At(i);} } 
			public ps.ParametersType At(int index) {return new ps.ParametersType(owner.GetElementAt(info, index));}
			public ps.ParametersType First { get  {return new ps.ParametersType(owner.GetElementFirst(info));} }
			public ps.ParametersType Last { get {return new ps.ParametersType(owner.GetElementLast(info));} }
			public ps.ParametersType Append(){return new ps.ParametersType(owner.CreateElement(info));}
			public ps.ParametersType AppendWithPrefix(string prefix) {return new ps.ParametersType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ParametersType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Parameter Parameter;
		public class MemberElement_Parameter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Parameter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ParameterType this [int i] { get { return At(i);} } 
			public ps.ParameterType At(int index) {return new ps.ParameterType(owner.GetElementAt(info, index));}
			public ps.ParameterType First { get  {return new ps.ParameterType(owner.GetElementFirst(info));} }
			public ps.ParameterType Last { get {return new ps.ParameterType(owner.GetElementLast(info));} }
			public ps.ParameterType Append(){return new ps.ParameterType(owner.CreateElement(info));}
			public ps.ParameterType AppendWithPrefix(string prefix) {return new ps.ParameterType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ParameterType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DisplayName DisplayName;
		public class MemberElement_DisplayName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DisplayName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DisplayNameTypeType this [int i] { get { return At(i);} } 
			public ps.DisplayNameTypeType At(int index) {return new ps.DisplayNameTypeType(owner.GetElementAt(info, index));}
			public ps.DisplayNameTypeType First { get  {return new ps.DisplayNameTypeType(owner.GetElementFirst(info));} }
			public ps.DisplayNameTypeType Last { get {return new ps.DisplayNameTypeType(owner.GetElementLast(info));} }
			public ps.DisplayNameTypeType Append(){return new ps.DisplayNameTypeType(owner.CreateElement(info));}
			public ps.DisplayNameTypeType AppendWithPrefix(string prefix) {return new ps.DisplayNameTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DisplayNameTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Description Description;
		public class MemberElement_Description : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Description (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ParametersType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ParametersType

	public class PropertyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_PropertyType]); }}


		public PropertyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			Name = new MemberElement_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Name]);
			Value2 = new MemberElement_Value2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Value2]);
			DisplayName = new MemberElement_DisplayName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_DisplayName]);
			DisplayOrder = new MemberElement_DisplayOrder (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_DisplayOrder]);
			DefaultValue = new MemberElement_DefaultValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_DefaultValue]);
			ChoiceList = new MemberElement_ChoiceList (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_ChoiceList]);
			Range = new MemberElement_Range (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Range]);
			AttributeProvider = new MemberElement_AttributeProvider (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_AttributeProvider]);
			Browsable = new MemberElement_Browsable (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Browsable]);
			UserRole = new MemberElement_UserRole (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_UserRole]);
			Description = new MemberElement_Description (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Description]);
			DisplayUnits = new MemberElement_DisplayUnits (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_DisplayUnits]);
			Editor = new MemberElement_Editor (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Editor]);
			NotifyParentProperty = new MemberElement_NotifyParentProperty (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_NotifyParentProperty]);
			ParenthesizePropertyName = new MemberElement_ParenthesizePropertyName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_ParenthesizePropertyName]);
			ReadOnly2 = new MemberElement_ReadOnly2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_ReadOnly2]);
			TypeConverter = new MemberElement_TypeConverter (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_TypeConverter]);
			CommandFormatString = new MemberElement_CommandFormatString (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_CommandFormatString]);
			CommandOrder = new MemberElement_CommandOrder (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_CommandOrder]);
			UnitsConverter = new MemberElement_UnitsConverter (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_UnitsConverter]);
			Tag = new MemberElement_Tag (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_Tag]);
			ValidationRule = new MemberElement_ValidationRule (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_PropertyType_altova_ValidationRule]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new PropertyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_Name Name;
		public class MemberElement_Name : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.NameTypeType this [int i] { get { return At(i);} } 
			public ps.NameTypeType At(int index) {return new ps.NameTypeType(owner.GetElementAt(info, index));}
			public ps.NameTypeType First { get  {return new ps.NameTypeType(owner.GetElementFirst(info));} }
			public ps.NameTypeType Last { get {return new ps.NameTypeType(owner.GetElementLast(info));} }
			public ps.NameTypeType Append(){return new ps.NameTypeType(owner.CreateElement(info));}
			public ps.NameTypeType AppendWithPrefix(string prefix) {return new ps.NameTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.NameTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Value2 Value2;
		public class MemberElement_Value2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Value2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ValueType this [int i] { get { return At(i);} } 
			public ps.ValueType At(int index) {return new ps.ValueType(owner.GetElementAt(info, index));}
			public ps.ValueType First { get  {return new ps.ValueType(owner.GetElementFirst(info));} }
			public ps.ValueType Last { get {return new ps.ValueType(owner.GetElementLast(info));} }
			public ps.ValueType Append(){return new ps.ValueType(owner.CreateElement(info));}
			public ps.ValueType AppendWithPrefix(string prefix) {return new ps.ValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DisplayName DisplayName;
		public class MemberElement_DisplayName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DisplayName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DisplayNameAttributeType this [int i] { get { return At(i);} } 
			public ps.DisplayNameAttributeType At(int index) {return new ps.DisplayNameAttributeType(owner.GetElementAt(info, index));}
			public ps.DisplayNameAttributeType First { get  {return new ps.DisplayNameAttributeType(owner.GetElementFirst(info));} }
			public ps.DisplayNameAttributeType Last { get {return new ps.DisplayNameAttributeType(owner.GetElementLast(info));} }
			public ps.DisplayNameAttributeType Append(){return new ps.DisplayNameAttributeType(owner.CreateElement(info));}
			public ps.DisplayNameAttributeType AppendWithPrefix(string prefix) {return new ps.DisplayNameAttributeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DisplayNameAttributeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DisplayOrder DisplayOrder;
		public class MemberElement_DisplayOrder : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DisplayOrder (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.unsignedLongType this [int i] { get { return At(i);} } 
			public xs.unsignedLongType At(int index) {return new xs.unsignedLongType(owner.GetElementAt(info, index));}
			public xs.unsignedLongType First { get  {return new xs.unsignedLongType(owner.GetElementFirst(info));} }
			public xs.unsignedLongType Last { get {return new xs.unsignedLongType(owner.GetElementLast(info));} }
			public xs.unsignedLongType Append(){return new xs.unsignedLongType(owner.CreateElement(info));}
			public xs.unsignedLongType AppendWithPrefix(string prefix) {return new xs.unsignedLongType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.unsignedLongType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DefaultValue DefaultValue;
		public class MemberElement_DefaultValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DefaultValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DefaultValueAttribute this [int i] { get { return At(i);} } 
			public ps.DefaultValueAttribute At(int index) {return new ps.DefaultValueAttribute(owner.GetElementAt(info, index));}
			public ps.DefaultValueAttribute First { get  {return new ps.DefaultValueAttribute(owner.GetElementFirst(info));} }
			public ps.DefaultValueAttribute Last { get {return new ps.DefaultValueAttribute(owner.GetElementLast(info));} }
			public ps.DefaultValueAttribute Append(){return new ps.DefaultValueAttribute(owner.CreateElement(info));}
			public ps.DefaultValueAttribute AppendWithPrefix(string prefix) {return new ps.DefaultValueAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DefaultValueAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ChoiceList ChoiceList;
		public class MemberElement_ChoiceList : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ChoiceList (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ChoiceListAttribute this [int i] { get { return At(i);} } 
			public ps.ChoiceListAttribute At(int index) {return new ps.ChoiceListAttribute(owner.GetElementAt(info, index));}
			public ps.ChoiceListAttribute First { get  {return new ps.ChoiceListAttribute(owner.GetElementFirst(info));} }
			public ps.ChoiceListAttribute Last { get {return new ps.ChoiceListAttribute(owner.GetElementLast(info));} }
			public ps.ChoiceListAttribute Append(){return new ps.ChoiceListAttribute(owner.CreateElement(info));}
			public ps.ChoiceListAttribute AppendWithPrefix(string prefix) {return new ps.ChoiceListAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ChoiceListAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Range Range;
		public class MemberElement_Range : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Range (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.RangeAttribute this [int i] { get { return At(i);} } 
			public ps.RangeAttribute At(int index) {return new ps.RangeAttribute(owner.GetElementAt(info, index));}
			public ps.RangeAttribute First { get  {return new ps.RangeAttribute(owner.GetElementFirst(info));} }
			public ps.RangeAttribute Last { get {return new ps.RangeAttribute(owner.GetElementLast(info));} }
			public ps.RangeAttribute Append(){return new ps.RangeAttribute(owner.CreateElement(info));}
			public ps.RangeAttribute AppendWithPrefix(string prefix) {return new ps.RangeAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.RangeAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_AttributeProvider AttributeProvider;
		public class MemberElement_AttributeProvider : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_AttributeProvider (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.AttributeProviderAttribute this [int i] { get { return At(i);} } 
			public ps.AttributeProviderAttribute At(int index) {return new ps.AttributeProviderAttribute(owner.GetElementAt(info, index));}
			public ps.AttributeProviderAttribute First { get  {return new ps.AttributeProviderAttribute(owner.GetElementFirst(info));} }
			public ps.AttributeProviderAttribute Last { get {return new ps.AttributeProviderAttribute(owner.GetElementLast(info));} }
			public ps.AttributeProviderAttribute Append(){return new ps.AttributeProviderAttribute(owner.CreateElement(info));}
			public ps.AttributeProviderAttribute AppendWithPrefix(string prefix) {return new ps.AttributeProviderAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.AttributeProviderAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Browsable Browsable;
		public class MemberElement_Browsable : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Browsable (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public xs.booleanType AppendWithPrefix(string prefix) {return new xs.booleanType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_UserRole UserRole;
		public class MemberElement_UserRole : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_UserRole (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.UserRoleAttribute this [int i] { get { return At(i);} } 
			public ps.UserRoleAttribute At(int index) {return new ps.UserRoleAttribute(owner.GetElementAt(info, index));}
			public ps.UserRoleAttribute First { get  {return new ps.UserRoleAttribute(owner.GetElementFirst(info));} }
			public ps.UserRoleAttribute Last { get {return new ps.UserRoleAttribute(owner.GetElementLast(info));} }
			public ps.UserRoleAttribute Append(){return new ps.UserRoleAttribute(owner.CreateElement(info));}
			public ps.UserRoleAttribute AppendWithPrefix(string prefix) {return new ps.UserRoleAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.UserRoleAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Description Description;
		public class MemberElement_Description : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Description (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DescriptionAttribute this [int i] { get { return At(i);} } 
			public ps.DescriptionAttribute At(int index) {return new ps.DescriptionAttribute(owner.GetElementAt(info, index));}
			public ps.DescriptionAttribute First { get  {return new ps.DescriptionAttribute(owner.GetElementFirst(info));} }
			public ps.DescriptionAttribute Last { get {return new ps.DescriptionAttribute(owner.GetElementLast(info));} }
			public ps.DescriptionAttribute Append(){return new ps.DescriptionAttribute(owner.CreateElement(info));}
			public ps.DescriptionAttribute AppendWithPrefix(string prefix) {return new ps.DescriptionAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DescriptionAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DisplayUnits DisplayUnits;
		public class MemberElement_DisplayUnits : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DisplayUnits (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DisplayUnitsAttribute this [int i] { get { return At(i);} } 
			public ps.DisplayUnitsAttribute At(int index) {return new ps.DisplayUnitsAttribute(owner.GetElementAt(info, index));}
			public ps.DisplayUnitsAttribute First { get  {return new ps.DisplayUnitsAttribute(owner.GetElementFirst(info));} }
			public ps.DisplayUnitsAttribute Last { get {return new ps.DisplayUnitsAttribute(owner.GetElementLast(info));} }
			public ps.DisplayUnitsAttribute Append(){return new ps.DisplayUnitsAttribute(owner.CreateElement(info));}
			public ps.DisplayUnitsAttribute AppendWithPrefix(string prefix) {return new ps.DisplayUnitsAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DisplayUnitsAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Editor Editor;
		public class MemberElement_Editor : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Editor (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.EditorAttribute this [int i] { get { return At(i);} } 
			public ps.EditorAttribute At(int index) {return new ps.EditorAttribute(owner.GetElementAt(info, index));}
			public ps.EditorAttribute First { get  {return new ps.EditorAttribute(owner.GetElementFirst(info));} }
			public ps.EditorAttribute Last { get {return new ps.EditorAttribute(owner.GetElementLast(info));} }
			public ps.EditorAttribute Append(){return new ps.EditorAttribute(owner.CreateElement(info));}
			public ps.EditorAttribute AppendWithPrefix(string prefix) {return new ps.EditorAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.EditorAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_NotifyParentProperty NotifyParentProperty;
		public class MemberElement_NotifyParentProperty : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_NotifyParentProperty (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public xs.booleanType AppendWithPrefix(string prefix) {return new xs.booleanType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ParenthesizePropertyName ParenthesizePropertyName;
		public class MemberElement_ParenthesizePropertyName : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ParenthesizePropertyName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public xs.booleanType AppendWithPrefix(string prefix) {return new xs.booleanType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ReadOnly2 ReadOnly2;
		public class MemberElement_ReadOnly2 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ReadOnly2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public xs.booleanType AppendWithPrefix(string prefix) {return new xs.booleanType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TypeConverter TypeConverter;
		public class MemberElement_TypeConverter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TypeConverter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.TypeConverterAttribute this [int i] { get { return At(i);} } 
			public ps.TypeConverterAttribute At(int index) {return new ps.TypeConverterAttribute(owner.GetElementAt(info, index));}
			public ps.TypeConverterAttribute First { get  {return new ps.TypeConverterAttribute(owner.GetElementFirst(info));} }
			public ps.TypeConverterAttribute Last { get {return new ps.TypeConverterAttribute(owner.GetElementLast(info));} }
			public ps.TypeConverterAttribute Append(){return new ps.TypeConverterAttribute(owner.CreateElement(info));}
			public ps.TypeConverterAttribute AppendWithPrefix(string prefix) {return new ps.TypeConverterAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.TypeConverterAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CommandFormatString CommandFormatString;
		public class MemberElement_CommandFormatString : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CommandFormatString (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.CommandFormatStringAttribute this [int i] { get { return At(i);} } 
			public ps.CommandFormatStringAttribute At(int index) {return new ps.CommandFormatStringAttribute(owner.GetElementAt(info, index));}
			public ps.CommandFormatStringAttribute First { get  {return new ps.CommandFormatStringAttribute(owner.GetElementFirst(info));} }
			public ps.CommandFormatStringAttribute Last { get {return new ps.CommandFormatStringAttribute(owner.GetElementLast(info));} }
			public ps.CommandFormatStringAttribute Append(){return new ps.CommandFormatStringAttribute(owner.CreateElement(info));}
			public ps.CommandFormatStringAttribute AppendWithPrefix(string prefix) {return new ps.CommandFormatStringAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.CommandFormatStringAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_CommandOrder CommandOrder;
		public class MemberElement_CommandOrder : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_CommandOrder (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.unsignedLongType this [int i] { get { return At(i);} } 
			public xs.unsignedLongType At(int index) {return new xs.unsignedLongType(owner.GetElementAt(info, index));}
			public xs.unsignedLongType First { get  {return new xs.unsignedLongType(owner.GetElementFirst(info));} }
			public xs.unsignedLongType Last { get {return new xs.unsignedLongType(owner.GetElementLast(info));} }
			public xs.unsignedLongType Append(){return new xs.unsignedLongType(owner.CreateElement(info));}
			public xs.unsignedLongType AppendWithPrefix(string prefix) {return new xs.unsignedLongType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.unsignedLongType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_UnitsConverter UnitsConverter;
		public class MemberElement_UnitsConverter : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_UnitsConverter (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.UnitsConverterAttribute this [int i] { get { return At(i);} } 
			public ps.UnitsConverterAttribute At(int index) {return new ps.UnitsConverterAttribute(owner.GetElementAt(info, index));}
			public ps.UnitsConverterAttribute First { get  {return new ps.UnitsConverterAttribute(owner.GetElementFirst(info));} }
			public ps.UnitsConverterAttribute Last { get {return new ps.UnitsConverterAttribute(owner.GetElementLast(info));} }
			public ps.UnitsConverterAttribute Append(){return new ps.UnitsConverterAttribute(owner.CreateElement(info));}
			public ps.UnitsConverterAttribute AppendWithPrefix(string prefix) {return new ps.UnitsConverterAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.UnitsConverterAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_Tag Tag;
		public class MemberElement_Tag : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Tag (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.TagValueType this [int i] { get { return At(i);} } 
			public ps.TagValueType At(int index) {return new ps.TagValueType(owner.GetElementAt(info, index));}
			public ps.TagValueType First { get  {return new ps.TagValueType(owner.GetElementFirst(info));} }
			public ps.TagValueType Last { get {return new ps.TagValueType(owner.GetElementLast(info));} }
			public ps.TagValueType Append(){return new ps.TagValueType(owner.CreateElement(info));}
			public ps.TagValueType AppendWithPrefix(string prefix) {return new ps.TagValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.TagValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ValidationRule ValidationRule;
		public class MemberElement_ValidationRule : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ValidationRule (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ValidationRuleAttribute this [int i] { get { return At(i);} } 
			public ps.ValidationRuleAttribute At(int index) {return new ps.ValidationRuleAttribute(owner.GetElementAt(info, index));}
			public ps.ValidationRuleAttribute First { get  {return new ps.ValidationRuleAttribute(owner.GetElementFirst(info));} }
			public ps.ValidationRuleAttribute Last { get {return new ps.ValidationRuleAttribute(owner.GetElementLast(info));} }
			public ps.ValidationRuleAttribute Append(){return new ps.ValidationRuleAttribute(owner.CreateElement(info));}
			public ps.ValidationRuleAttribute AppendWithPrefix(string prefix) {return new ps.ValidationRuleAttribute(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ValidationRuleAttribute.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("PropertyType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class PropertyType

	public class RangeAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_RangeAttribute]); }}


		public RangeAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			StartValue = new MemberElement_StartValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeAttribute_altova_StartValue]);
			StopValue = new MemberElement_StopValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeAttribute_altova_StopValue]);
			StepValue = new MemberElement_StepValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeAttribute_altova_StepValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RangeAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_StartValue StartValue;
		public class MemberElement_StartValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StartValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StopValue StopValue;
		public class MemberElement_StopValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StopValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StepValue StepValue;
		public class MemberElement_StepValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StepValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RangeAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class RangeAttribute

	public class RangeValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_RangeValueType]); }}


		public RangeValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			StartValue = new MemberElement_StartValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeValueType_altova_StartValue]);
			StopValue = new MemberElement_StopValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeValueType_altova_StopValue]);
			StepValue = new MemberElement_StepValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeValueType_altova_StepValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RangeValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_StartValue StartValue;
		public class MemberElement_StartValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StartValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StopValue StopValue;
		public class MemberElement_StopValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StopValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StepValue StepValue;
		public class MemberElement_StepValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StepValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.anySimpleTypeType this [int i] { get { return At(i);} } 
			public xs.anySimpleTypeType At(int index) {return new xs.anySimpleTypeType(owner.GetElementAt(info, index));}
			public xs.anySimpleTypeType First { get  {return new xs.anySimpleTypeType(owner.GetElementFirst(info));} }
			public xs.anySimpleTypeType Last { get {return new xs.anySimpleTypeType(owner.GetElementLast(info));} }
			public xs.anySimpleTypeType Append(){return new xs.anySimpleTypeType(owner.CreateElement(info));}
			public xs.anySimpleTypeType AppendWithPrefix(string prefix) {return new xs.anySimpleTypeType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.anySimpleTypeType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("RangeValueType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class RangeValueType

	public class ResourceNameType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ResourceNameType]); }}


		public ResourceNameType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ResourceNameType

	public class TagValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_TagValueType]); }}


		public TagValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			BooleanValue = new MemberElement_BooleanValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_BooleanValue]);
			ByteValue = new MemberElement_ByteValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_ByteValue]);
			DoubleValue = new MemberElement_DoubleValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_DoubleValue]);
			ComplexValue = new MemberElement_ComplexValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_ComplexValue]);
			IntValue = new MemberElement_IntValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_IntValue]);
			ObjectValue = new MemberElement_ObjectValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_ObjectValue]);
			StringValue = new MemberElement_StringValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_StringValue]);
			RangeValue = new MemberElement_RangeValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_RangeValue]);
			TypeValue = new MemberElement_TypeValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TagValueType_altova_TypeValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TagValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_BooleanValue BooleanValue;
		public class MemberElement_BooleanValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BooleanValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.BooleanValueType this [int i] { get { return At(i);} } 
			public ps.BooleanValueType At(int index) {return new ps.BooleanValueType(owner.GetElementAt(info, index));}
			public ps.BooleanValueType First { get  {return new ps.BooleanValueType(owner.GetElementFirst(info));} }
			public ps.BooleanValueType Last { get {return new ps.BooleanValueType(owner.GetElementLast(info));} }
			public ps.BooleanValueType Append(){return new ps.BooleanValueType(owner.CreateElement(info));}
			public ps.BooleanValueType AppendWithPrefix(string prefix) {return new ps.BooleanValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.BooleanValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ByteValue ByteValue;
		public class MemberElement_ByteValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ByteValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ByteValueType this [int i] { get { return At(i);} } 
			public ps.ByteValueType At(int index) {return new ps.ByteValueType(owner.GetElementAt(info, index));}
			public ps.ByteValueType First { get  {return new ps.ByteValueType(owner.GetElementFirst(info));} }
			public ps.ByteValueType Last { get {return new ps.ByteValueType(owner.GetElementLast(info));} }
			public ps.ByteValueType Append(){return new ps.ByteValueType(owner.CreateElement(info));}
			public ps.ByteValueType AppendWithPrefix(string prefix) {return new ps.ByteValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ByteValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DoubleValue DoubleValue;
		public class MemberElement_DoubleValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DoubleValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.DoubleValueType this [int i] { get { return At(i);} } 
			public ps.DoubleValueType At(int index) {return new ps.DoubleValueType(owner.GetElementAt(info, index));}
			public ps.DoubleValueType First { get  {return new ps.DoubleValueType(owner.GetElementFirst(info));} }
			public ps.DoubleValueType Last { get {return new ps.DoubleValueType(owner.GetElementLast(info));} }
			public ps.DoubleValueType Append(){return new ps.DoubleValueType(owner.CreateElement(info));}
			public ps.DoubleValueType AppendWithPrefix(string prefix) {return new ps.DoubleValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.DoubleValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ComplexValue ComplexValue;
		public class MemberElement_ComplexValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ComplexValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ComplexValueType2 this [int i] { get { return At(i);} } 
			public ps.ComplexValueType2 At(int index) {return new ps.ComplexValueType2(owner.GetElementAt(info, index));}
			public ps.ComplexValueType2 First { get  {return new ps.ComplexValueType2(owner.GetElementFirst(info));} }
			public ps.ComplexValueType2 Last { get {return new ps.ComplexValueType2(owner.GetElementLast(info));} }
			public ps.ComplexValueType2 Append(){return new ps.ComplexValueType2(owner.CreateElement(info));}
			public ps.ComplexValueType2 AppendWithPrefix(string prefix) {return new ps.ComplexValueType2(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ComplexValueType2.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IntValue IntValue;
		public class MemberElement_IntValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IntValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.IntValueType this [int i] { get { return At(i);} } 
			public ps.IntValueType At(int index) {return new ps.IntValueType(owner.GetElementAt(info, index));}
			public ps.IntValueType First { get  {return new ps.IntValueType(owner.GetElementFirst(info));} }
			public ps.IntValueType Last { get {return new ps.IntValueType(owner.GetElementLast(info));} }
			public ps.IntValueType Append(){return new ps.IntValueType(owner.CreateElement(info));}
			public ps.IntValueType AppendWithPrefix(string prefix) {return new ps.IntValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.IntValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ObjectValue ObjectValue;
		public class MemberElement_ObjectValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ObjectValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ObjectValueType this [int i] { get { return At(i);} } 
			public ps.ObjectValueType At(int index) {return new ps.ObjectValueType(owner.GetElementAt(info, index));}
			public ps.ObjectValueType First { get  {return new ps.ObjectValueType(owner.GetElementFirst(info));} }
			public ps.ObjectValueType Last { get {return new ps.ObjectValueType(owner.GetElementLast(info));} }
			public ps.ObjectValueType Append(){return new ps.ObjectValueType(owner.CreateElement(info));}
			public ps.ObjectValueType AppendWithPrefix(string prefix) {return new ps.ObjectValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ObjectValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StringValue StringValue;
		public class MemberElement_StringValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StringValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.StringValueType this [int i] { get { return At(i);} } 
			public ps.StringValueType At(int index) {return new ps.StringValueType(owner.GetElementAt(info, index));}
			public ps.StringValueType First { get  {return new ps.StringValueType(owner.GetElementFirst(info));} }
			public ps.StringValueType Last { get {return new ps.StringValueType(owner.GetElementLast(info));} }
			public ps.StringValueType Append(){return new ps.StringValueType(owner.CreateElement(info));}
			public ps.StringValueType AppendWithPrefix(string prefix) {return new ps.StringValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.StringValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RangeValue RangeValue;
		public class MemberElement_RangeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RangeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.RangeValueType2 this [int i] { get { return At(i);} } 
			public ps.RangeValueType2 At(int index) {return new ps.RangeValueType2(owner.GetElementAt(info, index));}
			public ps.RangeValueType2 First { get  {return new ps.RangeValueType2(owner.GetElementFirst(info));} }
			public ps.RangeValueType2 Last { get {return new ps.RangeValueType2(owner.GetElementLast(info));} }
			public ps.RangeValueType2 Append(){return new ps.RangeValueType2(owner.CreateElement(info));}
			public ps.RangeValueType2 AppendWithPrefix(string prefix) {return new ps.RangeValueType2(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.RangeValueType2.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TypeValue TypeValue;
		public class MemberElement_TypeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TypeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.TypeValueType2 this [int i] { get { return At(i);} } 
			public ps.TypeValueType2 At(int index) {return new ps.TypeValueType2(owner.GetElementAt(info, index));}
			public ps.TypeValueType2 First { get  {return new ps.TypeValueType2(owner.GetElementFirst(info));} }
			public ps.TypeValueType2 Last { get {return new ps.TypeValueType2(owner.GetElementLast(info));} }
			public ps.TypeValueType2 Append(){return new ps.TypeValueType2(owner.CreateElement(info));}
			public ps.TypeValueType2 AppendWithPrefix(string prefix) {return new ps.TypeValueType2(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.TypeValueType2.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TagValueType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class TagValueType

	public class TypeConverterAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_TypeConverterAttribute]); }}


		public TypeConverterAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeConverterAttribute_altova_Type_AssemblyQualifiedName]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TypeConverterAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("TypeConverterAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class TypeConverterAttribute

	public class UnitsConverterAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_UnitsConverterAttribute]); }}


		public UnitsConverterAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_UnitsConverterAttribute_altova_Type_AssemblyQualifiedName]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new UnitsConverterAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("UnitsConverterAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class UnitsConverterAttribute

	public class UserRoleAttribute : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_UserRoleAttribute]); }}


		public UserRoleAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new UserRoleAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("UserRoleAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class UserRoleAttribute

	public class ValidationRuleAttribute : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ValidationRuleAttribute]); }}


		public ValidationRuleAttribute(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValidationRuleAttribute_altova_Type_AssemblyQualifiedName]);
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValidationRuleAttribute_altova_Name]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ValidationRuleAttribute((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ValidationRuleAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ValidationRuleAttribute

	public class ValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ValueType]); }}


		public ValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

			BooleanValue = new MemberElement_BooleanValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_BooleanValue]);
			ByteValue = new MemberElement_ByteValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_ByteValue]);
			DoubleValue = new MemberElement_DoubleValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_DoubleValue]);
			ComplexValue = new MemberElement_ComplexValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_ComplexValue]);
			IntValue = new MemberElement_IntValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_IntValue]);
			ObjectValue = new MemberElement_ObjectValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_ObjectValue]);
			StringValue = new MemberElement_StringValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_StringValue]);
			RangeValue = new MemberElement_RangeValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_RangeValue]);
			TypeValue = new MemberElement_TypeValue (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ValueType_altova_TypeValue]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes


		// Elements
	
		public MemberElement_BooleanValue BooleanValue;
		public class MemberElement_BooleanValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_BooleanValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.booleanType this [int i] { get { return At(i);} } 
			public xs.booleanType At(int index) {return new xs.booleanType(owner.GetElementAt(info, index));}
			public xs.booleanType First { get  {return new xs.booleanType(owner.GetElementFirst(info));} }
			public xs.booleanType Last { get {return new xs.booleanType(owner.GetElementLast(info));} }
			public xs.booleanType Append(){return new xs.booleanType(owner.CreateElement(info));}
			public xs.booleanType AppendWithPrefix(string prefix) {return new xs.booleanType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.booleanType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ByteValue ByteValue;
		public class MemberElement_ByteValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ByteValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.byteType this [int i] { get { return At(i);} } 
			public xs.byteType At(int index) {return new xs.byteType(owner.GetElementAt(info, index));}
			public xs.byteType First { get  {return new xs.byteType(owner.GetElementFirst(info));} }
			public xs.byteType Last { get {return new xs.byteType(owner.GetElementLast(info));} }
			public xs.byteType Append(){return new xs.byteType(owner.CreateElement(info));}
			public xs.byteType AppendWithPrefix(string prefix) {return new xs.byteType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.byteType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_DoubleValue DoubleValue;
		public class MemberElement_DoubleValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_DoubleValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.doubleType this [int i] { get { return At(i);} } 
			public xs.doubleType At(int index) {return new xs.doubleType(owner.GetElementAt(info, index));}
			public xs.doubleType First { get  {return new xs.doubleType(owner.GetElementFirst(info));} }
			public xs.doubleType Last { get {return new xs.doubleType(owner.GetElementLast(info));} }
			public xs.doubleType Append(){return new xs.doubleType(owner.CreateElement(info));}
			public xs.doubleType AppendWithPrefix(string prefix) {return new xs.doubleType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.doubleType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ComplexValue ComplexValue;
		public class MemberElement_ComplexValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ComplexValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ComplexValueType this [int i] { get { return At(i);} } 
			public ps.ComplexValueType At(int index) {return new ps.ComplexValueType(owner.GetElementAt(info, index));}
			public ps.ComplexValueType First { get  {return new ps.ComplexValueType(owner.GetElementFirst(info));} }
			public ps.ComplexValueType Last { get {return new ps.ComplexValueType(owner.GetElementLast(info));} }
			public ps.ComplexValueType Append(){return new ps.ComplexValueType(owner.CreateElement(info));}
			public ps.ComplexValueType AppendWithPrefix(string prefix) {return new ps.ComplexValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ComplexValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_IntValue IntValue;
		public class MemberElement_IntValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_IntValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.intType this [int i] { get { return At(i);} } 
			public xs.intType At(int index) {return new xs.intType(owner.GetElementAt(info, index));}
			public xs.intType First { get  {return new xs.intType(owner.GetElementFirst(info));} }
			public xs.intType Last { get {return new xs.intType(owner.GetElementLast(info));} }
			public xs.intType Append(){return new xs.intType(owner.CreateElement(info));}
			public xs.intType AppendWithPrefix(string prefix) {return new xs.intType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.intType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_ObjectValue ObjectValue;
		public class MemberElement_ObjectValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_ObjectValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_StringValue StringValue;
		public class MemberElement_StringValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_StringValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public xs.stringType this [int i] { get { return At(i);} } 
			public xs.stringType At(int index) {return new xs.stringType(owner.GetElementAt(info, index));}
			public xs.stringType First { get  {return new xs.stringType(owner.GetElementFirst(info));} }
			public xs.stringType Last { get {return new xs.stringType(owner.GetElementLast(info));} }
			public xs.stringType Append(){return new xs.stringType(owner.CreateElement(info));}
			public xs.stringType AppendWithPrefix(string prefix) {return new xs.stringType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new xs.stringType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_RangeValue RangeValue;
		public class MemberElement_RangeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_RangeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.RangeValueType this [int i] { get { return At(i);} } 
			public ps.RangeValueType At(int index) {return new ps.RangeValueType(owner.GetElementAt(info, index));}
			public ps.RangeValueType First { get  {return new ps.RangeValueType(owner.GetElementFirst(info));} }
			public ps.RangeValueType Last { get {return new ps.RangeValueType(owner.GetElementLast(info));} }
			public ps.RangeValueType Append(){return new ps.RangeValueType(owner.CreateElement(info));}
			public ps.RangeValueType AppendWithPrefix(string prefix) {return new ps.RangeValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.RangeValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public MemberElement_TypeValue TypeValue;
		public class MemberElement_TypeValue : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_TypeValue (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.TypeValueType this [int i] { get { return At(i);} } 
			public ps.TypeValueType At(int index) {return new ps.TypeValueType(owner.GetElementAt(info, index));}
			public ps.TypeValueType First { get  {return new ps.TypeValueType(owner.GetElementFirst(info));} }
			public ps.TypeValueType Last { get {return new ps.TypeValueType(owner.GetElementLast(info));} }
			public ps.TypeValueType Append(){return new ps.TypeValueType(owner.CreateElement(info));}
			public ps.TypeValueType AppendWithPrefix(string prefix) {return new ps.TypeValueType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.TypeValueType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("ValueType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class ValueType

	public class Parameters2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_Parameters2]); }}


		public static Parameters2 LoadFromFile(string filename) 
		{
			return new Parameters2(Altova.Xml.XmlTreeOperations.LoadDocument(filename));			
		}

		public static Parameters2 LoadFromString(string xmlstring) 
		{
			return new Parameters2(Altova.Xml.XmlTreeOperations.LoadXml(xmlstring));			
		}

		public static Parameters2 LoadFromBinary(byte[] binary) 
		{
			return new Parameters2(Altova.Xml.XmlTreeOperations.LoadXmlBinary(binary));			
		}

		public void SaveToFile(string filename, bool prettyPrint)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, false, "\r\n");
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl)
		{
			SaveToFileWithLineEnd(filename, prettyPrint, omitXmlDecl, "\r\n");
		}

		public void SaveToFileWithLineEnd(string filename, bool prettyPrint, bool omitXmlDecl, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, false, lineend);
				else
					Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, prettyPrint, omitXmlDecl, false, lineend);
			}
			else
				Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, "UTF-8", false, false, prettyPrint, omitXmlDecl, false, lineend);
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, "\r\n" );
		}

		public void SaveToFile(string filename, bool prettyPrint, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, false, encoding, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, string lineend)
		{
			SaveToFile( filename, prettyPrint, omitXmlDecl, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0, lineend );
		}

		public void SaveToFile(string filename, bool prettyPrint, bool omitXmlDecl, string encoding, bool bBigEndian, bool bBOM, string lineend)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			Altova.Xml.XmlTreeOperations.SaveDocument(doc, filename, encoding, bBigEndian, bBOM, prettyPrint, omitXmlDecl, false, lineend);
		}

		public string SaveToString(bool prettyPrint)
		{
			return SaveToString( prettyPrint, false);
		}

		public string SaveToString(bool prettyPrint, bool omitXmlDecl)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXml(doc, prettyPrint, omitXmlDecl);
		}

		public byte[] SaveToBinary(bool prettyPrint)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.FirstChild is System.Xml.XmlDeclaration) 
			{
				string encoding = ((System.Xml.XmlDeclaration) doc.FirstChild).Encoding;
				if( encoding == System.String.Empty )
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
				else
					return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, prettyPrint);
			}
			else
				return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, "UTF-8", false, false, prettyPrint);
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding)
		{
			return SaveToBinary( prettyPrint, encoding, System.String.Compare(encoding, "UTF-16BE", true) == 0, System.String.Compare(encoding, "UTF-16", true) == 0 );
		}

		public byte[] SaveToBinary(bool prettyPrint, string encoding, bool bBigEndian, bool bBOM)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			return Altova.Xml.XmlTreeOperations.SaveXmlBinary(doc, encoding, bBigEndian, bBOM, prettyPrint);
		}

		public static Parameters2 CreateDocument()
		{	
			return CreateDocument("UTF-8");
		}

		public static Parameters2 CreateDocument(string encoding)
		{
			System.Xml.XmlDocument doc = new System.Xml.XmlDocument();
			doc.AppendChild(doc.CreateXmlDeclaration("1.0", encoding, null));
			return new Parameters2(doc);
		}

		public void SetDTDLocation(string dtdLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			string publicId = null;
			string internalSubset = null;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetDTDLocation requires a root element.");
			if (doc.DocumentType != null)
			{
				publicId = doc.DocumentType.PublicId;
				internalSubset = doc.DocumentType.InternalSubset;

				doc.RemoveChild(doc.DocumentType);
			}
			doc.InsertBefore(doc.DocumentElement, doc.CreateDocumentType(doc.DocumentElement.Name, publicId, dtdLocation, internalSubset));
		}

		public void SetSchemaLocation(string schemaLocation)
		{
			System.Xml.XmlDocument doc = (System.Xml.XmlDocument) Node;
			if (doc.DocumentElement == null)
				throw new System.InvalidOperationException("SetSchemaLocation requires a root element.");
			System.Xml.XmlAttribute att;
			if (doc.DocumentElement.NamespaceURI == "")
			{
				att = doc.CreateAttribute("xsi", "noNamespaceSchemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = schemaLocation;
			}	
			else
			{
				att = doc.CreateAttribute("xsi", "schemaLocation", "http://www.w3.org/2001/XMLSchema-instance");
				att.Value = doc.DocumentElement.NamespaceURI + " " + schemaLocation;
			}
			doc.DocumentElement.Attributes.Append(att);
		}

		static public void DeclareAllNamespacesFromSchema(Altova.Xml.ElementType node)
		{
			foreach (var ns in Parameters_TypeInfo.binder.Namespaces)
				if (ns.namespaceURI != "")
					node.DeclareNamespace(ns.prefix, ns.namespaceURI);
		}


		public Parameters2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			base2 = new MemberAttribute_base2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_Parameters2_altova_base2]);
			id = new MemberAttribute_id (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_Parameters2_altova_id]);
			lang = new MemberAttribute_lang (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_Parameters2_altova_lang]);
			space = new MemberAttribute_space (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_Parameters2_altova_space]);

			Parameters3 = new MemberElement_Parameters3 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_Parameters2_altova_Parameters3]);
		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new Parameters2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_base2 base2;
		public class MemberAttribute_base2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_base2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_id id;
		public class MemberAttribute_id
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_id (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_lang lang;
		public class MemberAttribute_lang
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_lang (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_space space;
		public class MemberAttribute_space
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_space (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }


			public ps.spaceType.EnumValues EnumerationValue
			{
				get
				{			
					return (ps.spaceType.EnumValues)GetEnumerationIndex(info, Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info), 1, 2);
				}
				
				set
				{
					if( (int)value >= 0 && (int)value < 2) 
						Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, info.DataType.facets.Value[(int)value + 1].stringValue);
					else
						throw new System.IndexOutOfRangeException();
				}
			}
		}


		// Elements
	
		public MemberElement_Parameters3 Parameters3;
		public class MemberElement_Parameters3 : System.Collections.IEnumerable
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info;
			public MemberElement_Parameters3 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) { this.owner = owner; this.info = info;}
			public ps.ParametersType this [int i] { get { return At(i);} } 
			public ps.ParametersType At(int index) {return new ps.ParametersType(owner.GetElementAt(info, index));}
			public ps.ParametersType First { get  {return new ps.ParametersType(owner.GetElementFirst(info));} }
			public ps.ParametersType Last { get {return new ps.ParametersType(owner.GetElementLast(info));} }
			public ps.ParametersType Append(){return new ps.ParametersType(owner.CreateElement(info));}
			public ps.ParametersType AppendWithPrefix(string prefix) {return new ps.ParametersType(owner.CreateElement(prefix, info.LocalName, info.NamespaceURI));}
			public bool Exists { get {return Count > 0;} }
			public int Count { get {return owner.CountElement(info);} }
			public void Remove() {owner.RemoveElement(info);}
			public void RemoveAt(int index) { owner.RemoveElementAt(info, index); }

			public System.Collections.IEnumerator GetEnumerator()
			{
				return new ps.ParametersType.Enumerator(Altova.Xml.XmlTreeOperations.GetElements(owner.Node, info).GetEnumerator());
			}

			public Altova.Xml.Meta.Element Info { get { return new Altova.Xml.Meta.Element(info); } }
		}	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("Parameters", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class Parameters2

	public class langType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_langType]); }}


		public langType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class langType

	public class langType2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_langType2]); }}


		public enum EnumValues
		{
			e = 0, // 
			Invalid = -1, // Invalid value
		};

		public langType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class langType2

	public class spaceType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_spaceType]); }}


		public enum EnumValues
		{
			edefault = 0, // default
			epreserve = 1, // preserve
			Invalid = -1, // Invalid value
		};

		public spaceType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class spaceType

	public class TypeValueType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_TypeValueType]); }}


		public TypeValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeValueType_altova_Type_AssemblyQualifiedName]);
			Value2 = new MemberAttribute_Value2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeValueType_altova_Value2]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TypeValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Value2 Value2;
		public class MemberAttribute_Value2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Value2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
		
	} // class TypeValueType

	public class DisplayNameTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DisplayNameTypeType]); }}


		public DisplayNameTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DisplayNameTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DisplayNameTypeType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DisplayNameTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DisplayNameType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DisplayNameTypeType

	public class NameTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_NameTypeType]); }}


		public NameTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new NameTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_NameTypeType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_NameTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("NameType", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class NameTypeType

	public class DisplayNameAttributeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DisplayNameAttributeType]); }}


		public DisplayNameAttributeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DisplayNameAttributeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DisplayNameAttributeType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DisplayNameAttributeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("DisplayNameAttribute", "ETS.EMQuest.Parameters.xsd")); 				
		}
		
	} // class DisplayNameAttributeType

	public class BooleanValueType : xs.booleanType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_BooleanValueType]); }}


		public BooleanValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_BooleanValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new BooleanValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("boolean", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class BooleanValueType

	public class ByteValueType : xs.byteType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ByteValueType]); }}


		public ByteValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ByteValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ByteValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("byte", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class ByteValueType

	public class DoubleValueType : xs.doubleType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_DoubleValueType]); }}


		public DoubleValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_DoubleValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new DoubleValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("double", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class DoubleValueType

	public class ComplexValueType2 : ps.ComplexValueType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ComplexValueType2]); }}


		public ComplexValueType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ComplexValueType2_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ComplexValueType2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
		
	} // class ComplexValueType2

	public class IntValueType : xs.intType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_IntValueType]); }}


		public IntValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_IntValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new IntValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("int", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class IntValueType

	public class ObjectValueType : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_ObjectValueType]); }}


		public ObjectValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_ObjectValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new ObjectValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class ObjectValueType

	public class StringValueType : xs.stringType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_StringValueType]); }}


		public StringValueType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_StringValueType_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new StringValueType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
	
		public new void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class StringValueType

	public class RangeValueType2 : ps.RangeValueType
	{
		public static new Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_RangeValueType2]); }}


		public RangeValueType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_RangeValueType2_altova_Name]);

		}

		internal new class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new RangeValueType2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
		
	} // class RangeValueType2

	public class TypeValueType2 : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_ps_altova_TypeValueType2]); }}


		public TypeValueType2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{
			Type_AssemblyQualifiedName = new MemberAttribute_Type_AssemblyQualifiedName (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeValueType2_altova_Type_AssemblyQualifiedName]);
			Value2 = new MemberAttribute_Value2 (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeValueType2_altova_Value2]);
			Name = new MemberAttribute_Name (this, Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_ps_altova_TypeValueType2_altova_Name]);

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new TypeValueType2((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public MemberAttribute_Type_AssemblyQualifiedName Type_AssemblyQualifiedName;
		public class MemberAttribute_Type_AssemblyQualifiedName
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Type_AssemblyQualifiedName (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Value2 Value2;
		public class MemberAttribute_Value2
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Value2 (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}
		public MemberAttribute_Name Name;
		public class MemberAttribute_Name
		{
			private Altova.Xml.TypeBase owner;
			private Altova.TypeInfo.MemberInfo info; 
			public MemberAttribute_Name (Altova.Xml.TypeBase owner, Altova.TypeInfo.MemberInfo info) {this.owner = owner; this.info = info;}
			public string Value { get {
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Altova.Xml.XmlTreeOperations.FindAttribute(owner.Node, info), info);			
			}
			set {	
				Altova.Xml.XmlTreeOperations.SetValue(owner.Node, info, value);		
			} }
			public bool Exists() {return owner.GetAttribute(info) != null;}
			public void Remove() {owner.RemoveAttribute(info);} 

			public Altova.Xml.Meta.Attribute Info { get { return new Altova.Xml.Meta.Attribute(info); } }
		}


		// Elements
		
	} // class TypeValueType2


} // namespace ps


namespace xs
{	
	public class ENTITIES : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_ENTITIES]); }}


		public ENTITIES(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITIES

	public class ENTITY : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_ENTITY]); }}


		public ENTITY(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ENTITY

	public class ID : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_ID]); }}


		public ID(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class ID

	public class IDREF : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_IDREF]); }}


		public IDREF(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREF

	public class IDREFS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_IDREFS]); }}


		public IDREFS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class IDREFS

	public class NCName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_NCName]); }}


		public NCName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NCName

	public class NMTOKEN : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_NMTOKEN]); }}


		public NMTOKEN(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKEN

	public class NMTOKENS : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_NMTOKENS]); }}


		public NMTOKENS(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NMTOKENS

	public class NOTATION : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_NOTATION]); }}


		public NOTATION(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class NOTATION

	public class Name : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_Name]); }}


		public Name(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class Name

	public class QName : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_QName]); }}


		public QName(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class QName

	public class anySimpleType : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_anySimpleType]); }}


		public anySimpleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anySimpleType

	public class anyType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_anyType]); }}


		public anyType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anyType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_anyType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anyType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anyType

	public class anyURI : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_anyURI]); }}


		public anyURI(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class anyURI

	public class base64Binary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_base64Binary]); }}


		public base64Binary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class base64Binary

	public class boolean : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_boolean]); }}


		public boolean(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class boolean

	public class byte2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_byte2]); }}


		public byte2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class byte2

	public class date : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_date]); }}


		public date(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class date

	public class dateTime : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_dateTime]); }}


		public dateTime(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class dateTime

	public class decimal2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_decimal2]); }}


		public decimal2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class decimal2

	public class double2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_double2]); }}


		public double2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class double2

	public class duration : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_duration]); }}


		public duration(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class duration

	public class float2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_float2]); }}


		public float2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class float2

	public class gDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_gDay]); }}


		public gDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gDay

	public class gMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_gMonth]); }}


		public gMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonth

	public class gMonthDay : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_gMonthDay]); }}


		public gMonthDay(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gMonthDay

	public class gYear : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_gYear]); }}


		public gYear(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYear

	public class gYearMonth : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_gYearMonth]); }}


		public gYearMonth(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class gYearMonth

	public class hexBinary : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_hexBinary]); }}


		public hexBinary(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class hexBinary

	public class int2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_int2]); }}


		public int2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class int2

	public class integer : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_integer]); }}


		public integer(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class integer

	public class language : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_language]); }}


		public language(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class language

	public class long2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_long2]); }}


		public long2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class long2

	public class negativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_negativeInteger]); }}


		public negativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class negativeInteger

	public class nonNegativeInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_nonNegativeInteger]); }}


		public nonNegativeInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonNegativeInteger

	public class nonPositiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_nonPositiveInteger]); }}


		public nonPositiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class nonPositiveInteger

	public class normalizedString : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_normalizedString]); }}


		public normalizedString(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class normalizedString

	public class positiveInteger : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_positiveInteger]); }}


		public positiveInteger(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class positiveInteger

	public class short2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_short2]); }}


		public short2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class short2

	public class string2 : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_string2]); }}


		public string2(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class string2

	public class time : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_time]); }}


		public time(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class time

	public class token : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_token]); }}


		public token(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class token

	public class unsignedByte : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_unsignedByte]); }}


		public unsignedByte(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedByte

	public class unsignedInt : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_unsignedInt]); }}


		public unsignedInt(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedInt

	public class unsignedLong : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_unsignedLong]); }}


		public unsignedLong(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedLong

	public class unsignedShort : Altova.Xml.TypeBase
	{
		public static Altova.Xml.Meta.SimpleType StaticInfo { get { return new Altova.Xml.Meta.SimpleType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_unsignedShort]); }}


		public unsignedShort(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}


		// Attributes


		// Elements
		
	} // class unsignedShort

	public class booleanType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_booleanType]); }}


		public booleanType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new booleanType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public bool Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_booleanType_altova_unnamed];
				return (bool)Altova.Xml.XmlTreeOperations.CastToBool(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_booleanType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("boolean", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class booleanType

	public class byteType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_byteType]); }}


		public byteType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new byteType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public int Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_byteType_altova_unnamed];
				return (int)Altova.Xml.XmlTreeOperations.CastToInt(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_byteType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("byte", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class byteType

	public class doubleType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_doubleType]); }}


		public doubleType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new doubleType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public double Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_doubleType_altova_unnamed];
				return (double)Altova.Xml.XmlTreeOperations.CastToDouble(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_doubleType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("double", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class doubleType

	public class intType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_intType]); }}


		public intType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new intType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public int Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_intType_altova_unnamed];
				return (int)Altova.Xml.XmlTreeOperations.CastToInt(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_intType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("int", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class intType

	public class stringType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_stringType]); }}


		public stringType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new stringType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_stringType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("string", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class stringType

	public class integerType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_integerType]); }}


		public integerType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new integerType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public decimal Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_integerType_altova_unnamed];
				return (decimal)Altova.Xml.XmlTreeOperations.CastToDecimal(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_integerType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("integer", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class integerType

	public class unsignedLongType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_unsignedLongType]); }}


		public unsignedLongType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new unsignedLongType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public ulong Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_unsignedLongType_altova_unnamed];
				return (ulong)Altova.Xml.XmlTreeOperations.CastToUInt64(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_unsignedLongType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("unsignedLong", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class unsignedLongType

	public class anySimpleTypeType : Altova.Xml.ElementType
	{
		public static Altova.Xml.Meta.ComplexType StaticInfo { get { return new Altova.Xml.Meta.ComplexType(Parameters_TypeInfo.binder.Types[Parameters_TypeInfo._altova_ti_xs_altova_anySimpleTypeType]); }}


		public anySimpleTypeType(System.Xml.XmlNode init) : base(init)
 		{
			instantiateMembers();
		} 
		
		private void instantiateMembers()
		{

		}

		internal class Enumerator : EnumeratorBase { 
			public Enumerator(System.Collections.IEnumerator inner) : base(inner) {}
			public override object Current { get { return new anySimpleTypeType((System.Xml.XmlNode)InnerCurrent); } }
		}

		// Attributes
		public string Value
		{
			get 
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_anySimpleTypeType_altova_unnamed];
				return (string)Altova.Xml.XmlTreeOperations.CastToString(Node, member);
			}
			set
			{
				Altova.TypeInfo.MemberInfo member = Parameters_TypeInfo.binder.Members[Parameters_TypeInfo._altova_mi_xs_altova_anySimpleTypeType_altova_unnamed];
				Altova.Xml.XmlTreeOperations.SetValue(Node, member, value);
			}
		}


		// Elements
	
		public void SetXsiType() 
		{ 
			Altova.Xml.XmlTreeOperations.SetAttribute(Node, "xsi:type", "http://www.w3.org/2001/XMLSchema-instance", 
				new System.Xml.XmlQualifiedName("anySimpleType", "http://www.w3.org/2001/XMLSchema")); 				
		}
		
	} // class anySimpleTypeType


} // namespace xs


namespace xml
{	

} // namespace xml


}
